# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md
#
# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

name: Rust package

on: [ push, pull_request ]

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo vendor
        uses: actions-rs/cargo@v1
        with:
          command: vendor

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Pull necessary docker images
        run: |
          docker pull mongo:latest
          docker pull redis:latest

      - name: Run cargo vendor
        uses: actions-rs/cargo@v1
        with:
          command: vendor

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
    env:
      RUST_BACKTRACE: 1

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo vendor
        uses: actions-rs/cargo@v1
        with:
          command: vendor

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  examples:
    name: Run examples
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      CMDPROXY_VERSION: volatile
      RUST_VERSION: 1.66

    steps:
      - uses: actions/checkout@v3

      - name: Run cargo vendor
        uses: actions-rs/cargo@v1
        with:
          command: vendor

      - name: Launch cmdproxy server and underline databases
        run: |
          docker compose up -d

      - name: Run cmdproxy rust client
        run: |
          docker compose run --rm rs-client

      - name: Run cmdproxy python client
        run: |
          docker compose run --rm py-client

      - name: Shutdown cmdproxy server and underline databases
        run: |
          docker compose down
