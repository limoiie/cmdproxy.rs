# This docker-compose.yml file is used for the tests.
# It deploys an empty mongodb and a redis.

version: '3'
services:
  backend:
    image: mongo:latest
    container_name: cmdproxy-backend
    networks:
      - overlay
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=cmdproxy-db

  broker:
    image: redis:latest
    container_name: cmdproxy-broker
    networks:
      - overlay
    ports:
      - "6379:6379"
    
  cmdproxy:
    build: .
    image: cmdproxy.rs:${CMDPROXY_VERSION}
    container_name: cmdproxy-server
    depends_on:
      - backend
      - broker
    networks:
      - overlay
    environment:
      - CMDPROXY_LOGLEVEL=TRACE
      - CMDPROXY_MONGO_DBNAME=cmdproxy-db
      - CMDPROXY_MONGO_URL=mongodb://backend:27017
      - CMDPROXY_REDIS_URL=redis://broker:6379

  py-client:
    build:
      context: .
      dockerfile: ./examples/Dockerfile.client-py
    image: cmdproxy.rs/examples/client-py:${CMDPROXY_VERSION}
    container_name: cmdproxy-client
    depends_on:
      - backend
      - broker
    networks:
      - overlay
    environment:
      - CMDPROXY_MONGO_DBNAME=cmdproxy-db
      - CMDPROXY_MONGO_URL=mongodb://backend:27017
      - CMDPROXY_REDIS_URL=redis://broker:6379
    profiles: ["py-client"]

  rs-client:
    build:
      context: .
      dockerfile: ./examples/Dockerfile.client-rs
    image: cmdproxy.rs/examples/client-rs:${CMDPROXY_VERSION}
    container_name: cmdproxy-client
    depends_on:
      - backend
      - broker
    networks:
      - overlay
    environment:
      - CMDPROXY_LOGLEVEL=TRACE
      - CMDPROXY_MONGO_DBNAME=cmdproxy-db
      - CMDPROXY_MONGO_URL=mongodb://backend:27017
      - CMDPROXY_REDIS_URL=redis://broker:6379
    profiles: ["rs-client"]

networks:
  overlay:

